[ Advanced Solidity Path: Get In-depth Knowledge ]

1. Testing Smart Contracts with Truffle

(이 챕터만 따로 txt 파일로 만드는 이유는 내용이 .sol파일로 진행되는게 아니라 CLI로 진행되기 때문이다)
챕터 1: Getting Set Up

In this lesson, we will be covering the theory behind testing Ethereum smart contracts, with a focus on Truffle, Mocha, and Chai. 
You will need an intermediate level of knowledge of Solidity and JavaScript to help you get the most out of these lessons.

If you don't have prior exposure to Solidity, or you want to revise some of the concepts, go ahead and start learning with our first lesson.
If you are not comfortable with JavaScript, consider going through a tutorial elsewhere before starting this lesson.


_Let's Peep Into Our Project
If you followed along with our previous lessons, you should have built a zombie-themed game that is largely ready, and your file structure should look like this:

├── build
  ├── contracts
      ├── Migrations.json
      ├── CryptoZombies.json
      ├── erc721.json
      ├── ownable.json
      ├── safemath.json
      ├── zombieattack.json
      ├── zombiefactory.json
      ├── zombiefeeding.json
      ├── zombiehelper.json
      ├── zombieownership.json
├── contracts
  ├── Migrations.sol
  ├── CryptoZombies.sol
  ├── erc721.sol
  ├── ownable.sol
  ├── safemath.sol
  ├── zombieattack.sol
  ├── zombiefactory.sol
  ├── zombiefeeding.sol
  ├── zombiehelper.sol
  ├── zombieownership.sol
├── migrations
└── test
. package-lock.json
. truffle-config.js
. truffle.js


※ 이상한 점 ※
실제로 lesson6까지 끝낸 후의 디렉토리 구조가 위와 같지 않다. 아마 코스 중간에 빠진 커리큘럼이 있어서 그런 듯 하다. 왜 빠진지는 모르겠다. 
lesson 6까지가 초중급이고(ex https://cryptozombies.io/ko/lesson/6) 갑자기 두번째 단계부터 lesson11로 시작하는 걸 링크로 확인할 수 있다(https://cryptozombies.io/ko/lesson/11/).

See the test folder? This is where we are going to be putting our tests.
Truffle provides support for tests written in JavaScript and Solidity but, for the scope of this lesson, we are going to keep things simple and stick to JavaScript.


_Put it to the test
It is best practice to create a separate test file for each contract and give it the name of the smart contract. 
This makes managing your tests simpler in the long run, especially as your project grows and changes.

1. In the terminal to the right, run touch test/CryptoZombies.js.

답 : 
$ touch test/CryptoZombies.js



















